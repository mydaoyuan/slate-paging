{"version":3,"sources":["plugins/page/defaults.ts","plugins/page/normalizers/normalizePage.ts","plugins/page/withPage.ts","plugins/page-ui/PageElement.tsx","styledComponents.ts","newplugin.tsx","config/pluginOptions.ts","env.tsx","components/paging/input-div.tsx","components/paging/index.tsx","App.tsx","plugins/page/createPagePlugin.ts","reportWebVitals.ts","index.tsx"],"names":["ELEMENT_PAGE","emptyPage","type","children","dirtyNodes","Set","isPageNormalize","normalizePage","editor","normalizeNode","entry","node","path","console","log","Element","isElement","size","Promise","resolve","then","setTimeout","clear","dirtyNodesArr","Array","from","shift","PageNode","ReactEditor","toDOMNode","length","e","hasNextPage","findPath","nextPagePath","style","window","getComputedStyle","pageHeight","offsetHeight","parseFloat","paddingTop","paddingBottom","currentPageHeight","preElementBottomMargin","forEach","child","index","computeItemHeight","childHeight","height","marginBottom","splitIndex","formPath","toPath","nodePathIndex","Transforms","moveNodes","at","match","n","Editor","isEditor","to","concat","moveChildToNextPage","entryNode","wrapNodes","split","createPageAndMove","empytHeiht","nextPageNodes","nextPageChildren","riseElementToPrevPage","removeNodes","previous","prevNode","has","add","next","nextNode","dom","mergeMargin","clientHeight","marginTop","mergeMarginVal","Math","max","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","error","PageElement","attributes","nodeProps","className","FONT_COLOR","FONT_FAMILY","useStyledComponents","useMemo","components","createPlateComponents","ELEMENT_PARAGRAPH","withProps","StyledElement","styles","root","color","fontFamily","fontWeight","fontSize","lineHeight","margin","ELEMENT_TODO_LI","TodoListElement","text","textDecoration","opacity","ELEMENT_H1","textAlign","ELEMENT_H2","ELEMENT_TD","as","backgroundColor","border","padding","minWidth","selectors","ELEMENT_TABLE","TableElement","ELEMENT_TH","MARK_UNDERLINE","StyledLeaf","borderBottom","ELEMENT_ALIGN_RIGHT","ELEMENT_ALIGN_CENTER","ELEMENT_ALIGN_JUSTIFY","ELEMENT_ALIGN_LEFT","withPlaceholders","key","placeholder","hideOnBlur","ToolbarButtonsBasicElements","useStoreEditorRef","useEventEditorId","getPlatePluginType","icon","ToolbarButtonsList","ELEMENT_UL","ELEMENT_OL","ToolbarButtonsAlign","ToolbarButtonsBasicMarks","MARK_BOLD","MARK_ITALIC","MARK_STRIKETHROUGH","MARK_SUPERSCRIPT","MARK_SUBSCRIPT","ToolbarButtonsTable","transform","insertTable","deleteTable","addRow","deleteRow","addColumn","deleteColumn","BallonToolbarMarks","tooltip","arrow","delay","duration","hideOnClick","offset","placement","direction","hiddenDelay","theme","content","resetBlockTypesCommonRule","types","ELEMENT_BLOCKQUOTE","defaultType","optionsResetBlockTypePlugin","rules","hotkey","predicate","isBlockAboveEmpty","isSelectionAtBlockStart","optionsExitBreakPlugin","level","before","query","start","end","allow","KEYS_HEADING","optionsSoftBreakPlugin","ELEMENT_CODE_BLOCK","ConfigContext","React","createContext","pageInfo","state","page","headerValue","footerValue","headerAttribute","footerAttribute","PageContext","data","setPageData","setData","PageProvider","props","useState","providerValue","val","Provider","value","compile","require","compileOptions","escape","interpolate","InputDiv","changeValue","getCompileValue","useCallback","inputValue","compileValue","compileFn","replaceAll","focus","setState","useEffect","autoFocus","onChange","target","onBlur","display","onClick","Paging","pageContext","useContext","arrs","fill","changeHeader","changeFooter","map","v","top","RichText","config","modelenv","eventBus","model","id","componentRef","useRef","handlePrint","useReactToPrint","current","removeAfterPrint","initialValuePasteHtml","code","styledComponents","defaultOptions","createPlateOptions","pluginsMemo","plugins","createReactPlugin","createHistoryPlugin","createParagraphPlugin","createTodoListPlugin","createHeadingPlugin","createListPlugin","pluginKeys","renderElement","getRenderElement","withOverrides","insertText","createTablePlugin","createAlignPlugin","createBoldPlugin","createCodePlugin","createItalicPlugin","createHighlightPlugin","createUnderlinePlugin","createStrikethroughPlugin","createSubscriptPlugin","createSuperscriptPlugin","createKbdPlugin","createNodeIdPlugin","createResetNodePlugin","createSoftBreakPlugin","createExitBreakPlugin","createSelectOnBackspacePlugin","ELEMENT_IMAGE","push","createDeserializeHTMLPlugin","slateEditor","normalize","options","editableProps","width","minHeight","outline","initialValue","ref","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.94961b98.chunk.js","sourcesContent":["export const ELEMENT_PAGE = 'page'\n","import { Transforms, Element, Node, Editor, Path, Range } from 'slate'\nimport { ReactEditor } from 'slate-react'\nimport { SPEditor } from '@udecode/plate-core'\n\nconst emptyPage = {\n  type: 'page',\n  children: []\n}\n\nconst dirtyNodes: Set<any> = new Set()\nlet isPageNormalize = false\n\n// TODO\n/**\n * 如果当前只有一页，或者当前不存在page 元素，需要包裹一个 page 元素\n */\n\n/**\n * 在编辑器进行 normalize 的时候\n *  1、记录下当前 normalize 的 page 元素，为了防止分页修改，把上下页的 page 元素 也要记录下来\n *  2、normalize 完，react 操作 DOM 后就可以访问到 DOM 数据。 进行高度计算\n *    2.1、 为了能够在操作 DOM 再进行高度判断， 设置了个状态  isPageNormalize。\n *          isPageNormalize 用来判断是否是 DOM 高度分页造成的 normalize 触发，\n *          这种情况下就不需要再记录 page 元素了，否则会无限循环\n * 3、当前页面高度累加超出当前页面高度，则后续的元素都需要移动到下一页\n * 4、当前页面高度累加不足，且存在下页，则需要把下一页元素向上移动\n */\nexport const normalizePage = (editor: ReactEditor & SPEditor) => {\n  // can include custom normalisations---\n  const { normalizeNode } = editor\n  return (entry: any) => {\n    let [node, path] = entry\n    console.log('into normalizePage')\n    // if the node is Page\n    if (Element.isElement(node) && (node as any).type === 'page') {\n      if (!isPageNormalize && !dirtyNodes.size) {\n        Promise.resolve().then(() => {\n          setTimeout(() => {\n            isPageNormalize = false\n            dirtyNodes.clear()\n          })\n          console.log(dirtyNodes.size, 'dirtyNodesdirtyNodes 长度')\n          isPageNormalize = true\n          // 遍历page\n          const dirtyNodesArr = Array.from(dirtyNodes)\n          while (dirtyNodesArr.length) {\n            node = dirtyNodesArr.shift()\n            let PageNode\n            // afaik pageNode if inserted as new page is not available here as a dom node because it hasnt rendered yet\n            try {\n              // dom maybe unrender, so node children length diff dom children length\n              PageNode = ReactEditor.toDOMNode(editor, node)\n              console.log(PageNode)\n              console.log(\n                PageNode.children.length,\n                node.children.length,\n                'node.children.length'\n              )\n            } catch (e) {\n              return\n            }\n            const hasNextPage = !!dirtyNodesArr.length\n            const path = ReactEditor.findPath(editor, node)\n            const nextPagePath = [path[0] + 1]\n            console.log(\n              ReactEditor.findPath(editor, node),\n              ' ReactEditor.findPath(editor, node)'\n            )\n            const style = window.getComputedStyle(PageNode)\n            const computedHeight = PageNode.offsetHeight\n            const padding =\n              parseFloat(style.paddingTop) + parseFloat(style.paddingBottom)\n\n            const pageHeight = computedHeight - padding\n\n            let currentPageHeight = 0\n\n            const children: globalThis.Element[] = Array.from(PageNode.children)\n            // top bottom margin merge\n            let preElementBottomMargin = 0\n            // eslint-disable-next-line no-loop-func\n            children.forEach((child, index) => {\n              const { height: childHeight, marginBottom } = computeItemHeight(\n                child,\n                preElementBottomMargin\n              )\n              preElementBottomMargin = marginBottom\n              currentPageHeight = currentPageHeight + childHeight\n              if (currentPageHeight > pageHeight) {\n                if (hasNextPage && nextPagePath) {\n                  moveChildToNextPage(editor, index, path, nextPagePath)\n                } else {\n                  createPageAndMove(editor, index, path, node)\n                }\n              }\n            })\n            // if current page have enough height can contain next page first child node,\n            //  we need move this node\n            if (currentPageHeight < pageHeight && hasNextPage && nextPagePath) {\n              console.log('if current page have enough height can contain next')\n              let empytHeiht = pageHeight - currentPageHeight\n              const nextPageNodes = ReactEditor.toDOMNode(\n                editor,\n                dirtyNodesArr[0]\n              )\n              const nextPageChildren = Array.from(nextPageNodes.children)\n              // top bottom margin merge\n              let preElementBottomMargin = 0\n              for (let index = 0; index < nextPageChildren.length; index++) {\n                const nextPageChildNode = nextPageChildren[index]\n                const { height: childHeight, marginBottom } = computeItemHeight(\n                  nextPageChildNode,\n                  preElementBottomMargin\n                )\n                preElementBottomMargin = marginBottom\n                if (empytHeiht < childHeight) break\n                empytHeiht = empytHeiht - childHeight\n                const toPath = path.concat([node.children.length])\n                riseElementToPrevPage(editor, index, nextPagePath, toPath)\n                // if move done, this page is empty, remove this page\n                if (index === nextPageChildren.length - 1) {\n                  Transforms.removeNodes(editor, {\n                    at: nextPagePath\n                  })\n                }\n              }\n            }\n          }\n        })\n      }\n      if (!isPageNormalize) {\n        // 前后一页都要变脏\n        if (!dirtyNodes.size) {\n          const [prevNode] =\n            Editor.previous(editor, {\n              at: path\n            }) || []\n          if (prevNode) {\n            !dirtyNodes.has(prevNode) && dirtyNodes.add(prevNode)\n          }\n        }\n        !dirtyNodes.has(node) && dirtyNodes.add(node)\n\n        const [nextNode] =\n          Editor.next(editor, {\n            at: path\n          }) || []\n        if (nextNode) {\n          !dirtyNodes.has(nextNode) && dirtyNodes.add(nextNode)\n        }\n      }\n      return\n    }\n\n    // Fall back to the original `normalizeNode` to enforce other constraints.\n    return normalizeNode(entry)\n  }\n}\n\nfunction computeItemHeight(\n  dom: globalThis.Element,\n  mergeMargin: number\n): {\n  height: number\n  marginBottom: number\n} {\n  const style = window.getComputedStyle(dom)\n  const clientHeight = dom.clientHeight\n  const marginTop = parseFloat(style.marginBottom)\n  const mergeMarginVal = Math.max(marginTop - mergeMargin, 0)\n  const marginBottom = parseFloat(style.marginBottom)\n  const margin = mergeMarginVal + marginBottom\n  const padding = parseFloat(style.paddingBottom) + parseFloat(style.paddingTop)\n  const border =\n    parseFloat(style.borderLeftWidth) +\n    parseFloat(style.borderRightWidth) +\n    parseFloat(style.borderTopWidth) +\n    parseFloat(style.borderBottomWidth)\n\n  const height = clientHeight + margin + padding + border\n  return { height, marginBottom: marginBottom }\n}\n\nfunction moveChildToNextPage(\n  editor: ReactEditor,\n  splitIndex: number,\n  formPath: Path,\n  toPath: Path\n): void {\n  let nodePathIndex = 0\n  Transforms.moveNodes(editor, {\n    at: formPath,\n    match(n) {\n      if (\n        !Editor.isEditor(n) &&\n        Element.isElement(n) &&\n        (n as any).type !== 'page'\n      ) {\n        return nodePathIndex++ >= splitIndex\n      }\n      return false\n    },\n    to: toPath.concat([0])\n  })\n}\n\nfunction createPageAndMove(\n  editor: ReactEditor,\n  splitIndex: number,\n  formPath: Path,\n  entryNode: Node\n) {\n  // use index record nodes path, because node cant find path in this time.\n  let nodePathIndex = 0\n  // need create page node\n  Transforms.wrapNodes(editor, emptyPage, {\n    at: formPath,\n    split: true,\n    match(n) {\n      if (\n        !Editor.isEditor(n) &&\n        Element.isElement(n) &&\n        (n as any).type !== 'page'\n      ) {\n        return nodePathIndex++ >= splitIndex\n      }\n      return false\n    }\n  })\n  Transforms.moveNodes(editor, {\n    at: formPath,\n    match(n) {\n      if (\n        !Editor.isEditor(n) &&\n        Element.isElement(n) &&\n        (n as any).type === 'page' &&\n        n !== entryNode\n      ) {\n        return true\n      }\n      return false\n    },\n    to: [formPath[0] + 1]\n  })\n}\n\nfunction riseElementToPrevPage(\n  editor: ReactEditor,\n  splitIndex: number,\n  formPath: Path,\n  toPath: Path\n) {\n  Transforms.moveNodes(editor, {\n    at: formPath,\n    // eslint-disable-next-line space-before-function-paren\n    match(n) {\n      if (\n        !Editor.isEditor(n) &&\n        Element.isElement(n) &&\n        (n as any).type !== 'page'\n      ) {\n        let path\n        try {\n          path = ReactEditor.findPath(editor, n)\n        } catch (error) {\n          return false\n        }\n        return path[1] <= splitIndex\n      }\n      return false\n    },\n    to: toPath // move to previous page last position\n  })\n}\n","import { SPEditor, WithOverride } from '@udecode/plate-core'\nimport { normalizePage } from './normalizers/normalizePage'\nimport { ReactEditor } from 'slate-react'\n\n// import { ELEMENT_LINE } from './defaults'\n\nexport const withPage =\n  (): WithOverride<ReactEditor & SPEditor> => (editor) => {\n    const { insertText } = editor\n    editor.normalizeNode = normalizePage(editor)\n    editor.insertText = (text) => {\n      console.log('insertText', text)\n      // debugger\n      insertText(text)\n    }\n    return editor\n  }\n","import * as React from 'react'\nimport { StyledElementProps } from '@udecode/plate-styled-components'\nimport './page.css'\nexport const PageElement = ({\n  attributes,\n  children,\n  nodeProps\n}: StyledElementProps) => {\n  return (\n    <div {...attributes} {...nodeProps} className='custom-page'>\n      {children}\n    </div>\n  )\n}\n","import { useMemo } from 'react'\nimport {\n  withPlaceholders,\n  createPlateComponents,\n  withProps,\n  // CodeBlockElement,\n  TableElement,\n  StyledElement,\n  TodoListElement,\n  StyledLeaf,\n  // ELEMENT_CODE_BLOCK,\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_TD,\n  ELEMENT_TH,\n  ELEMENT_TABLE,\n  ELEMENT_TODO_LI,\n  ELEMENT_PARAGRAPH,\n  ELEMENT_ALIGN_RIGHT,\n  ELEMENT_ALIGN_CENTER,\n  ELEMENT_ALIGN_JUSTIFY,\n  ELEMENT_ALIGN_LEFT,\n  MARK_UNDERLINE\n} from '@udecode/plate'\n\nimport { ELEMENT_PAGE } from './plugins/page'\nimport { PageElement } from './plugins/page-ui'\n\nexport const withStyledPlaceHolders = (components: any) =>\n  withPlaceholders(components, [\n    {\n      key: ELEMENT_PARAGRAPH,\n      placeholder: '输入文字...',\n      hideOnBlur: true\n    }\n  ])\nconst FONT_COLOR = '#000'\nconst FONT_FAMILY = 'songti, \"SimSun\", STSong'\nconst useStyledComponents = () => {\n  return useMemo(() => {\n    return withStyledPlaceHolders(\n      createPlateComponents({\n        [ELEMENT_PAGE]: PageElement as any,\n        [ELEMENT_PARAGRAPH]: withProps(StyledElement, {\n          styles: {\n            root: {\n              color: FONT_COLOR,\n              fontFamily: FONT_FAMILY,\n              fontWeight: 600,\n              fontSize: '15.6px',\n              // fontSize: '18px',\n              lineHeight: '1.5',\n              margin: '0.33em 0'\n            }\n          }\n        }),\n        [ELEMENT_TODO_LI]: withProps(TodoListElement, {\n          styles: {\n            root: {\n              color: FONT_COLOR,\n              fontFamily: FONT_FAMILY,\n              fontWeight: 600,\n              fontSize: '15.6px',\n              lineHeight: '1.5'\n            },\n            text: {\n              textDecoration: 'none',\n              opacity: 1\n            }\n          }\n        }),\n        [ELEMENT_H1]: withProps(StyledElement, {\n          styles: {\n            root: {\n              color: FONT_COLOR,\n              fontFamily: FONT_FAMILY,\n              fontWeight: 600,\n              fontSize: '32px',\n              textAlign: 'center',\n              lineHeight: '1.4',\n              paddingBottom: '16px'\n            }\n          }\n        }),\n        [ELEMENT_H2]: withProps(StyledElement, {\n          styles: {\n            root: {\n              color: FONT_COLOR,\n              fontFamily: FONT_FAMILY,\n              fontWeight: 600,\n              fontSize: '18px',\n              textAlign: 'center',\n              lineHeight: '1.5'\n            }\n          }\n        }),\n        [ELEMENT_TD]: withProps(StyledElement, {\n          as: 'td',\n          styles: {\n            root: {\n              backgroundColor: '#fff',\n              color: FONT_COLOR,\n              fontFamily: FONT_FAMILY,\n              border: '1px solid #000',\n              padding: '3px 10px',\n              minWidth: '48px',\n              selectors: {\n                '> *': {\n                  margin: 0\n                }\n              }\n            }\n          }\n        }),\n        [ELEMENT_TABLE]: withProps(TableElement, {\n          styles: {\n            root: {\n              border: '2px solid #000'\n            }\n          }\n        }),\n        [ELEMENT_TH]: withProps(StyledElement, {\n          as: 'th',\n          styles: {\n            root: {\n              color: FONT_COLOR,\n              fontFamily: FONT_FAMILY,\n              backgroundColor: '#fff',\n              border: '1px solid #000',\n              padding: '3px 10px',\n              minWidth: '48px',\n              textAlign: 'left',\n              selectors: {\n                '> *': {\n                  margin: 0\n                }\n              }\n            }\n          }\n        }),\n        [MARK_UNDERLINE]: withProps(StyledLeaf, {\n          as: 'u',\n          styles: {\n            root: {\n              textDecoration: 'none',\n              // backgroundImage: 'linear-gradient(to top, currentColor, currentColor 0.1em, transparent 0.1em)',\n              borderBottom: '0.1em solid',\n              paddingBottom: '0.15em'\n            }\n          }\n        }),\n        [ELEMENT_ALIGN_RIGHT]: withProps(StyledElement, {\n          styles: {\n            root: {\n              textAlign: 'right !important',\n              selectors: {\n                '> *': {\n                  textAlign: 'right !important'\n                }\n              }\n            }\n          }\n        }),\n        [ELEMENT_ALIGN_CENTER]: withProps(StyledElement, {\n          styles: {\n            root: {\n              textAlign: 'center'\n            }\n          }\n        }),\n        [ELEMENT_ALIGN_JUSTIFY]: withProps(StyledElement, {\n          styles: {\n            root: {\n              textAlign: 'justify !important',\n              selectors: {\n                '> *': {\n                  textAlign: 'justify !important'\n                }\n              }\n            }\n          }\n        }),\n        [ELEMENT_ALIGN_LEFT]: withProps(StyledElement, {\n          styles: {\n            root: {\n              textAlign: 'left !important',\n              selectors: {\n                '> *': {\n                  textAlign: 'left !important'\n                }\n              }\n            }\n          }\n        })\n      })\n    )\n  }, [])\n}\n\nexport default useStyledComponents\n","/* eslint-disable */\nimport 'tippy.js/animations/scale.css'\nimport 'tippy.js/dist/tippy.css'\nimport React from 'react'\nimport { MoveHorizontal } from '@styled-icons/boxicons-regular/MoveHorizontal'\nimport { ListAlt } from '@styled-icons/material/ListAlt'\nimport { CheckBox } from '@styled-icons/material/CheckBox'\nimport { Highlight } from '@styled-icons/boxicons-regular/Highlight'\nimport { Subscript } from '@styled-icons/foundation/Subscript'\nimport { Superscript } from '@styled-icons/foundation/Superscript'\nimport { BorderAll } from '@styled-icons/material/BorderAll'\nimport { BorderBottom } from '@styled-icons/material/BorderBottom'\nimport { BorderClear } from '@styled-icons/material/BorderClear'\nimport { BorderLeft } from '@styled-icons/material/BorderLeft'\nimport { BorderRight } from '@styled-icons/material/BorderRight'\nimport { BorderTop } from '@styled-icons/material/BorderTop'\nimport { FormatAlignCenter } from '@styled-icons/material/FormatAlignCenter'\nimport { FormatAlignJustify } from '@styled-icons/material/FormatAlignJustify'\nimport { FormatAlignLeft } from '@styled-icons/material/FormatAlignLeft'\nimport { FormatAlignRight } from '@styled-icons/material/FormatAlignRight'\nimport { FormatBold } from '@styled-icons/material/FormatBold'\nimport { FormatItalic } from '@styled-icons/material/FormatItalic'\nimport { FormatListBulleted } from '@styled-icons/material/FormatListBulleted'\nimport { FormatListNumbered } from '@styled-icons/material/FormatListNumbered'\nimport { FormatQuote } from '@styled-icons/material/FormatQuote'\nimport { FormatStrikethrough } from '@styled-icons/material/FormatStrikethrough'\nimport { FormatUnderlined } from '@styled-icons/material/FormatUnderlined'\nimport { Keyboard } from '@styled-icons/material/Keyboard'\nimport { LooksOne } from '@styled-icons/material/LooksOne'\nimport { LooksTwo } from '@styled-icons/material/LooksTwo'\nimport { TippyProps } from '@tippyjs/react'\nimport {\n  addColumn,\n  addRow,\n  BalloonToolbar,\n  deleteColumn,\n  deleteRow,\n  deleteTable,\n  ELEMENT_ALIGN_LEFT,\n  ELEMENT_ALIGN_CENTER,\n  ELEMENT_ALIGN_JUSTIFY,\n  ELEMENT_ALIGN_RIGHT,\n  ELEMENT_BLOCKQUOTE,\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_H4,\n  ELEMENT_H5,\n  ELEMENT_H6,\n  ELEMENT_OL,\n  ELEMENT_UL,\n  getPlatePluginType,\n  insertTable,\n  MARK_BOLD,\n  MARK_CODE,\n  MARK_ITALIC,\n  MARK_KBD,\n  MARK_STRIKETHROUGH,\n  MARK_SUBSCRIPT,\n  MARK_SUPERSCRIPT,\n  MARK_UNDERLINE,\n  ToolbarAlign,\n  ToolbarElement,\n  ToolbarList,\n  ToolbarMark,\n  ToolbarTable\n} from '@udecode/plate'\nimport { ELEMENT_CODE_BLOCK } from '@udecode/plate-code-block'\nimport { ToolbarCodeBlock } from '@udecode/plate-code-block-ui'\nimport { useEventEditorId, useStoreEditorRef } from '@udecode/plate-core'\nimport { MARK_HIGHLIGHT } from '@udecode/plate-highlight'\n\nexport const ToolbarButtonsBasicElements = () => {\n  const editor = useStoreEditorRef(useEventEditorId('focus'))\n  console.log('i am run render ToolbarButtonsBasicElements')\n  return (\n    <>\n      <ToolbarElement\n        type={getPlatePluginType(editor, ELEMENT_H1)}\n        icon={<LooksOne />}\n      />\n      <ToolbarElement\n        type={getPlatePluginType(editor, ELEMENT_H2)}\n        icon={<LooksTwo />}\n      />\n\n      {/* <ToolbarElement type={getPlatePluginType(editor, ELEMENT_H3)} icon={<Looks3 />} />\n      <ToolbarElement type={getPlatePluginType(editor, ELEMENT_H4)} icon={<Looks4 />} />\n      <ToolbarElement type={getPlatePluginType(editor, ELEMENT_H5)} icon={<Looks5 />} />\n      <ToolbarElement type={getPlatePluginType(editor, ELEMENT_H6)} icon={<Looks6 />} /> */}\n      {/* <ToolbarElement type={getPlatePluginType(editor, ELEMENT_BLOCKQUOTE)} icon={<FormatQuote />} /> */}\n      {/* <ToolbarCodeBlock type={getPlatePluginType(editor, ELEMENT_CODE_BLOCK)} icon={<CodeBlock />} /> */}\n    </>\n  )\n}\n\nexport const ToolbarButtonsList = () => {\n  const editor = useStoreEditorRef(useEventEditorId('focus'))\n\n  return (\n    <>\n      <ToolbarList\n        type={getPlatePluginType(editor, ELEMENT_UL)}\n        icon={<FormatListBulleted />}\n      />\n      <ToolbarList\n        type={getPlatePluginType(editor, ELEMENT_OL)}\n        icon={<FormatListNumbered />}\n      />\n    </>\n  )\n}\n\nexport const ToolbarButtonsAlign = () => {\n  const editor = useStoreEditorRef(useEventEditorId('focus'))\n\n  return (\n    <>\n      <ToolbarAlign\n        type={getPlatePluginType(editor, ELEMENT_ALIGN_LEFT)}\n        icon={<FormatAlignLeft />}\n      />\n      <ToolbarAlign\n        type={getPlatePluginType(editor, ELEMENT_ALIGN_CENTER)}\n        icon={<FormatAlignCenter />}\n      />\n      <ToolbarAlign\n        type={getPlatePluginType(editor, ELEMENT_ALIGN_RIGHT)}\n        icon={<FormatAlignRight />}\n      />\n      <ToolbarAlign\n        type={getPlatePluginType(editor, ELEMENT_ALIGN_JUSTIFY)}\n        icon={<FormatAlignJustify />}\n      />\n    </>\n  )\n}\n\nexport const ToolbarButtonsBasicMarks = () => {\n  const editor = useStoreEditorRef(useEventEditorId('focus'))\n\n  return (\n    <>\n      <ToolbarMark\n        type={getPlatePluginType(editor, MARK_BOLD)}\n        icon={<FormatBold />}\n      />\n      <ToolbarMark\n        type={getPlatePluginType(editor, MARK_ITALIC)}\n        icon={<FormatItalic />}\n      />\n      <ToolbarMark\n        type={getPlatePluginType(editor, MARK_UNDERLINE)}\n        icon={<FormatUnderlined />}\n      />\n      <ToolbarMark\n        type={getPlatePluginType(editor, MARK_STRIKETHROUGH)}\n        icon={<FormatStrikethrough />}\n      />\n      <ToolbarMark\n        type={getPlatePluginType(editor, MARK_SUPERSCRIPT)}\n        clear={getPlatePluginType(editor, MARK_SUBSCRIPT)}\n        icon={<Superscript />}\n      />\n      <ToolbarMark\n        type={getPlatePluginType(editor, MARK_SUBSCRIPT)}\n        clear={getPlatePluginType(editor, MARK_SUPERSCRIPT)}\n        icon={<Subscript />}\n      />\n    </>\n  )\n}\n\nexport const ToolbarKbd = () => {\n  const editor = useStoreEditorRef(useEventEditorId('focus'))\n\n  return (\n    <ToolbarMark\n      type={getPlatePluginType(editor, MARK_KBD)}\n      icon={<Keyboard />}\n    />\n  )\n}\n\nexport const ToolbarHighlight = () => {\n  const editor = useStoreEditorRef(useEventEditorId('focus'))\n\n  return (\n    <ToolbarMark\n      type={getPlatePluginType(editor, MARK_HIGHLIGHT)}\n      icon={<Highlight />}\n    />\n  )\n}\n\nexport const ToolbarButtonsTable = () => (\n  <>\n    <ToolbarTable icon={<BorderAll />} transform={insertTable} />\n    <ToolbarTable icon={<BorderClear />} transform={deleteTable} />\n    <ToolbarTable icon={<BorderBottom />} transform={addRow} />\n    <ToolbarTable icon={<BorderTop />} transform={deleteRow} />\n    <ToolbarTable icon={<BorderLeft />} transform={addColumn} />\n    <ToolbarTable icon={<BorderRight />} transform={deleteColumn} />\n  </>\n)\n\nexport const BallonToolbarMarks = () => {\n  const editor = useStoreEditorRef(useEventEditorId('focus'))\n\n  const arrow = false\n  const theme = 'dark'\n  const direction = 'top'\n  const hiddenDelay = 0\n  const tooltip: TippyProps = {\n    arrow: true,\n    delay: 0,\n    duration: [200, 0],\n    hideOnClick: false,\n    offset: [0, 17],\n    placement: 'top'\n  }\n\n  return (\n    <BalloonToolbar\n      direction={direction}\n      hiddenDelay={hiddenDelay}\n      theme={theme}\n      arrow={arrow}\n    >\n      <ToolbarMark\n        type={getPlatePluginType(editor, MARK_BOLD)}\n        icon={<FormatBold />}\n        tooltip={{ content: 'Bold (⌘B)', ...tooltip }}\n      />\n      <ToolbarMark\n        type={getPlatePluginType(editor, MARK_ITALIC)}\n        icon={<FormatItalic />}\n        tooltip={{ content: 'Italic (⌘I)', ...tooltip }}\n      />\n      <ToolbarMark\n        type={getPlatePluginType(editor, MARK_UNDERLINE)}\n        icon={<FormatUnderlined />}\n        tooltip={{ content: 'Underline (⌘U)', ...tooltip }}\n      />\n    </BalloonToolbar>\n  )\n}\n","import {\n  ExitBreakPluginOptions,\n  ELEMENT_PARAGRAPH,\n  KEYS_HEADING,\n  ELEMENT_TD,\n  ELEMENT_BLOCKQUOTE,\n  ELEMENT_CODE_BLOCK,\n  ELEMENT_TODO_LI,\n  ResetBlockTypePluginOptions,\n  isBlockAboveEmpty,\n  isSelectionAtBlockStart,\n  SoftBreakPluginOptions\n} from '@udecode/plate'\n\nconst resetBlockTypesCommonRule = {\n  types: [ELEMENT_BLOCKQUOTE, ELEMENT_TODO_LI],\n  defaultType: ELEMENT_PARAGRAPH\n}\n\nexport const optionsResetBlockTypePlugin: ResetBlockTypePluginOptions = {\n  rules: [\n    {\n      ...resetBlockTypesCommonRule,\n      hotkey: 'Enter',\n      predicate: isBlockAboveEmpty\n    },\n    {\n      ...resetBlockTypesCommonRule,\n      hotkey: 'Backspace',\n      predicate: isSelectionAtBlockStart\n    }\n  ]\n}\n\nexport const optionsExitBreakPlugin: ExitBreakPluginOptions = {\n  rules: [\n    {\n      hotkey: 'mod+enter',\n      level: 1\n    },\n    {\n      hotkey: 'mod+shift+enter',\n      before: true,\n      level: 1\n    },\n    {\n      hotkey: 'enter',\n      query: {\n        start: true,\n        end: true,\n        allow: KEYS_HEADING\n      }\n    }\n  ]\n}\n\nexport const optionsSoftBreakPlugin: SoftBreakPluginOptions = {\n  rules: [\n    { hotkey: 'shift+enter' },\n    {\n      hotkey: 'enter',\n      query: {\n        allow: [ELEMENT_CODE_BLOCK, ELEMENT_BLOCKQUOTE, ELEMENT_TD]\n      }\n    }\n  ]\n}\n","import React, { useMemo, useState } from 'react'\n\ninterface Config {\n  model?: string\n  id?: string\n  value?: {}\n}\n\ninterface reactStyleAttr {\n  textAlign?: 'left' | 'right' | 'center'\n  color?: string\n}\ninterface PageInfo {\n  state: any\n  page: number\n  headerValue: string\n  footerValue: string\n  headerAttribute: reactStyleAttr\n  footerAttribute: reactStyleAttr\n}\n\nlet configValue: Config = {}\n\nexport const getConfigValue = () => {\n  return configValue\n}\nexport const setConfigValue = (val: Config) => {\n  configValue = val\n}\n\nexport const ConfigContext = React.createContext<Config>({})\n\n// 分页信息的\nconst pageInfo: PageInfo = {\n  state: {},\n  page: 1,\n  headerValue: '第{{page}}页 点击修改',\n  footerValue: '',\n  headerAttribute: {},\n  footerAttribute: {}\n}\n\nexport const PageContext = React.createContext<{\n  data: PageInfo\n  setPageData(val: PageInfo): any\n  setData: any\n}>({\n  data: pageInfo,\n  setPageData: () => {},\n  setData: () => {}\n})\n\nexport const PageProvider = (props: any) => {\n  const [data, setData] = useState<PageInfo>(pageInfo)\n\n  const providerValue = useMemo(() => {\n    return {\n      data,\n      setData: (val: any) => {\n        console.log(val, '编辑器的数据')\n        // page 是顶级元素，只要进行一层遍历\n        let page = 0\n        for (let index = 0; index < val.length; index++) {\n          const element = val[index]\n          if (element.type === 'page') {\n            page += 1\n          }\n        }\n        // 计算page\n        const pageInfo = {\n          ...data,\n          page: page\n        }\n        setData(pageInfo)\n      },\n      setPageData(state: PageInfo) {\n        setData(state)\n      }\n    }\n  }, [data, setData])\n\n  return (\n    <PageContext.Provider value={providerValue}>\n      {props.children}\n    </PageContext.Provider>\n  )\n}\n","import React, { useState } from 'react'\nimport { useCallback } from 'react'\nimport { useEffect } from 'react'\nconst compile = require('lodash.template')\nconst compileOptions = {\n  escape: /{{([^{][\\s\\S]+?[^}])}}/g,\n  interpolate: /{{{([\\s\\S]+?)}}}/g\n}\n// 优化 回车后跳回编辑器\n\nexport default function InputDiv(props: any) {\n  const { value, changeValue, className = '', placeholder, style, page } = props\n  const getCompileValue = useCallback(\n    (inputValue: string) => {\n      let compileValue = ''\n      try {\n        const compileFn = compile(inputValue, compileOptions)\n        const val = compileFn({\n          page\n        })\n        console.log(val, 'is value  compile')\n        compileValue = val\n      } catch (error) {\n        console.log(' 无效  变量 呀兄弟 is value  compile')\n        compileValue = '无效表达式'\n      }\n      compileValue = compileValue.replaceAll(' ', '\\u00a0')\n      return compileValue\n    },\n    [page]\n  )\n\n  const [state, setState] = useState({\n    focus: false,\n    compileValue: getCompileValue(value)\n  })\n\n  const onBlur = () => {\n    setState({\n      ...state,\n      focus: false,\n      compileValue: getCompileValue(value)\n    })\n  }\n\n  useEffect(() => {\n    const compileValue = getCompileValue(value)\n    setState((state) => {\n      state.compileValue = compileValue\n      return state\n    })\n  }, [value, getCompileValue])\n\n  const changeHeader = (e: React.ChangeEvent<HTMLInputElement>) => {\n    console.log('changeHeader')\n    changeValue(e.target.value)\n  }\n  const onclick = () => {\n    setState({\n      ...state,\n      focus: true\n    })\n  }\n\n  return (\n    <div\n      className={\n        state.focus\n          ? `${className} page-input-warp active`\n          : `${className} page-input-warp`\n      }\n      style={style || {}}\n    >\n      {state.focus ? (\n        <input\n          className='page-input'\n          value={value}\n          autoFocus\n          onChange={changeHeader}\n          onBlur={onBlur}\n          type='text'\n        />\n      ) : null}\n      <div\n        className='page-content'\n        style={{\n          display: state.focus ? 'none' : 'block',\n          fontSize: '14px'\n        }}\n        onClick={onclick}\n      >\n        {state.compileValue || placeholder}\n      </div>\n    </div>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { PageContext } from '../../env'\nimport InputDiv from './input-div'\n\nexport default function Paging(props: any) {\n  const pageContext = useContext(PageContext)\n  const data = pageContext.data\n  const arrs = new Array(data.page).fill('')\n  // 一页的高度  用于计算位置\n  const pageHeight = 1122\n  // const pageToolHeight = 0\n  const pageToolHeight = 60\n  const selfHeight = 44\n  const changeHeader = (e: string) => {\n    pageContext.setPageData({ ...data, headerValue: e })\n  }\n  const changeFooter = (e: string) => {\n    pageContext.setPageData({ ...data, footerValue: e })\n  }\n\n  return (\n    <div className='paging-com'>\n      {arrs.map((v, index) => {\n        return (\n          <div key={'page-warp' + index}>\n            <InputDiv\n              style={{\n                top: index * pageHeight + pageToolHeight + 'px'\n              }}\n              changeValue={changeHeader}\n              page={index + 1}\n              value={data.headerValue}\n              placeholder={'点击输入页眉'}\n            ></InputDiv>\n            <InputDiv\n              style={{\n                top:\n                  (index + 1) * pageHeight + pageToolHeight - selfHeight + 'px'\n              }}\n              changeValue={changeFooter}\n              page={index + 1}\n              value={data.footerValue}\n              placeholder={'点击输入页脚'}\n            ></InputDiv>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n","/* eslint-disable no-console */\nimport React, { useEffect, useMemo, useState, useRef, useContext } from 'react'\nimport {\n  Plate,\n  createReactPlugin,\n  createHistoryPlugin,\n  createParagraphPlugin,\n  // createBlockquotePlugin,\n  createItalicPlugin,\n  createStrikethroughPlugin,\n  createCodePlugin,\n  createUnderlinePlugin,\n  createBoldPlugin,\n  createTablePlugin,\n  createSuperscriptPlugin,\n  createHighlightPlugin,\n  createSubscriptPlugin,\n  createTodoListPlugin,\n  createKbdPlugin,\n  // createNormalizeTypesPlugin,\n  // createTrailingBlockPlugin,\n  createSelectOnBackspacePlugin,\n  createDeserializeHTMLPlugin,\n  createAlignPlugin,\n  createExitBreakPlugin,\n  ExitBreakPluginOptions,\n  createNodeIdPlugin,\n  createListPlugin,\n  createHeadingPlugin,\n  // createCodeBlockPlugin,\n  ELEMENT_PARAGRAPH,\n  // ELEMENT_H1,\n  KEYS_HEADING,\n  // ELEMENT_H2,\n  ELEMENT_TD,\n  ELEMENT_IMAGE,\n  ELEMENT_BLOCKQUOTE,\n  ELEMENT_CODE_BLOCK,\n  // ELEMENT_CODE_LINE,\n  ELEMENT_TODO_LI,\n  // CodeBlockElement,\n  // 搜索插件\n  // useFindReplacePlugin,\n  // MARK_BOLD,\n  // withPlaceholders,\n  createPlateOptions,\n  // createSlatePluginsComponents,\n  // withProps,\n  ResetBlockTypePluginOptions,\n  isBlockAboveEmpty,\n  isSelectionAtBlockStart,\n  createResetNodePlugin,\n  createSoftBreakPlugin,\n  SoftBreakPluginOptions\n  // createAutoformatPlugin,\n  // useStoreState\n} from '@udecode/plate'\nimport { useStoreEditorRef, useEventEditorStore } from '@udecode/plate-core'\nimport { useReactToPrint } from 'react-to-print'\nimport { ReactEditor } from 'slate-react'\nimport { Transforms, Editor as slateEditor } from 'slate'\nimport useStyledComponents from './styledComponents'\nimport { HeadingToolbar } from '@udecode/plate-toolbar'\nimport {\n  ToolbarButtonsBasicElements,\n  BallonToolbarMarks,\n  ToolbarButtonsAlign,\n  ToolbarButtonsTable,\n  ToolbarButtonsList,\n  ToolbarButtonsBasicMarks\n} from './newplugin'\n\n// markdown语法支持\n// import { optionsAutoformat } from './autoformatRules'\n// import DominInput from './components/domin/input'\n\nimport {\n  optionsResetBlockTypePlugin,\n  optionsExitBreakPlugin,\n  optionsSoftBreakPlugin\n} from './config/pluginOptions'\nimport { ConfigContext, PageContext, PageProvider } from './env'\nimport { createPagePlugin } from './plugins/page'\nimport Paging from './components/paging/index'\nconst RichText = ({ config, eventBus }: any) => {\n  const { model: modelenv, id } = config\n  const componentRef = useRef(null)\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n    removeAfterPrint: false\n  })\n\n  useEffect(() => {\n    ;(window as any).handlePrint = handlePrint\n  }, [handlePrint])\n\n  // const initialValueBasicElements = config.value || [\n  //   { type: 'p', children: [{ text: '' }] }\n  // ]\n  const initialValuePasteHtml: any = [\n    {\n      type: 'page',\n      children: [\n        {\n          type: 'h1',\n          children: [\n            {\n              text: '🍪 Deserialize HTML'\n            }\n          ]\n        },\n        {\n          type: 'p',\n          children: [\n            {\n              text: \"By default, pasting content into a Slate editor will use the clipboard's \"\n            },\n            { text: \"'text/plain'\", code: true },\n            {\n              text: \" data. That's okay for some use cases, but sometimes you want users to be able to paste in content and have it maintain its formatting. To do this, your editor needs to handle \"\n            },\n            { text: \"'text/html'\", code: true },\n            { text: ' data. ' }\n          ]\n        },\n        {\n          type: 'p',\n          children: [\n            {\n              text: \"By default, pasting content into a Slate editor will use the clipboard's \"\n            },\n            { text: \"'text/plain'\", code: true },\n            {\n              text: \" data. That's okay for some use cases, but sometimes you want users to be able to paste in content and have it maintain its formatting. To do this, your editor needs to handle \"\n            },\n            { text: \"'text/html'\", code: true },\n            { text: ' data. ' }\n          ]\n        },\n        {\n          type: 'p',\n          children: [\n            {\n              text: \"By default, pasting content into a Slate editor will use the clipboard's \"\n            },\n            { text: \"'text/plain'\", code: true },\n            {\n              text: \" data. That's okay for some use cases, but sometimes you want users to be able to paste in content and have it maintain its formatting. To do this, your editor needs to handle \"\n            },\n            { text: \"'text/html'\", code: true },\n            { text: ' data. ' }\n          ]\n        },\n        {\n          type: 'p',\n          children: [\n            {\n              text: \"By default, pasting content into a Slate editor will use the clipboard's \"\n            },\n            { text: \"'text/plain'\", code: true },\n            {\n              text: \" data. That's okay for some use cases, but sometimes you want users to be able to paste in content and have it maintain its formatting. To do this, your editor needs to handle \"\n            },\n            { text: \"'text/html'\", code: true },\n            { text: ' data. ' }\n          ]\n        },\n        {\n          type: 'p',\n          children: [\n            {\n              text: \"By default, pasting content into a Slate editor will use the clipboard's \"\n            },\n            { text: \"'text/plain'\", code: true },\n            {\n              text: \" data. That's okay for some use cases, but sometimes you want users to be able to paste in content and have it maintain its formatting. To do this, your editor needs to handle \"\n            },\n            { text: \"'text/html'\", code: true },\n            { text: ' data. ' }\n          ]\n        },\n        {\n          type: 'p',\n          children: [\n            {\n              text: \"By default, pasting content into a Slate editor will use the clipboard's \"\n            },\n            { text: \"'text/plain'\", code: true },\n            {\n              text: \" data. That's okay for some use cases, but sometimes you want users to be able to paste in content and have it maintain its formatting. To do this, your editor needs to handle \"\n            },\n            { text: \"'text/html'\", code: true },\n            { text: ' data. ' }\n          ]\n        },\n        {\n          type: 'p',\n          children: [\n            {\n              text: \"By default, pasting content into a Slate editor will use the clipboard's \"\n            },\n            { text: \"'text/plain'\", code: true },\n            {\n              text: \" data. That's okay for some use cases, but sometimes you want users to be able to paste in content and have it maintain its formatting. To do this, your editor needs to handle \"\n            },\n            { text: \"'text/html'\", code: true },\n            { text: ' data. ' }\n          ]\n        },\n        {\n          type: 'p',\n          children: [\n            {\n              text: \"By default, pasting content into a Slate editor will use the clipboard's \"\n            },\n            { text: \"'text/plain'\", code: true },\n            {\n              text: \" data. That's okay for some use cases, but sometimes you want users to be able to paste in content and have it maintain its formatting. To do this, your editor needs to handle \"\n            },\n            { text: \"'text/html'\", code: true },\n            { text: ' data. ' }\n          ]\n        },\n        {\n          type: 'p',\n          children: [\n            {\n              text: \"By default, pasting content into a Slate editor will use the clipboard's \"\n            },\n            { text: \"'text/plain'\", code: true },\n            {\n              text: \" data. That's okay for some use cases, but sometimes you want users to be able to paste in content and have it maintain its formatting. To do this, your editor needs to handle \"\n            },\n            { text: \"'text/html'\", code: true },\n            { text: ' data. ' }\n          ]\n        },\n        {\n          type: 'p',\n          children: [\n            {\n              text: \"By default, pasting content into a Slate editor will use the clipboard's \"\n            },\n            { text: \"'text/plain'\", code: true },\n            {\n              text: \" data. That's okay for some use cases, but sometimes you want users to be able to paste in content and have it maintain its formatting. To do this, your editor needs to handle \"\n            },\n            { text: \"'text/html'\", code: true },\n            { text: ' data. ' }\n          ]\n        },\n        {\n          type: 'p',\n          children: [\n            {\n              text: \"By default, pasting content into a Slate editor will use the clipboard's \"\n            },\n            { text: \"'text/plain'\", code: true },\n            {\n              text: \" data. That's okay for some use cases, but sometimes you want users to be able to paste in content and have it maintain its formatting. To do this, your editor needs to handle \"\n            },\n            { text: \"'text/html'\", code: true },\n            { text: ' data. ' }\n          ]\n        },\n        {\n          type: 'p',\n          children: [\n            {\n              text: \"By default, pasting content into a Slate editor will use the clipboard's \"\n            },\n            { text: \"'text/plain'\", code: true },\n            {\n              text: \" data. That's okay for some use cases, but sometimes you want users to be able to paste in content and have it maintain its formatting. To do this, your editor needs to handle \"\n            },\n            { text: \"'text/html'\", code: true },\n            { text: ' data. ' }\n          ]\n        }\n      ]\n    }\n  ]\n  const styledComponents = useStyledComponents()\n\n  const defaultOptions = createPlateOptions()\n\n  // const Tootip = useMemo(() => {\n  //   return modelenv === 'read' ? null : <BallonToolbarMarks />\n  // }, [modelenv])\n\n  const Editor = () => {\n    const pluginsMemo = useMemo(() => {\n      const plugins = [\n        createReactPlugin(),\n        createHistoryPlugin(),\n        createParagraphPlugin(),\n        // createBlockquotePlugin(),\n        createTodoListPlugin(),\n        createHeadingPlugin(),\n        createListPlugin(),\n        createPagePlugin(),\n        createTablePlugin(),\n        // createCodeBlockPlugin(),\n        createAlignPlugin(),\n        createBoldPlugin(),\n        createCodePlugin(),\n        createItalicPlugin(),\n        createHighlightPlugin(),\n        createUnderlinePlugin(),\n        createStrikethroughPlugin(),\n        createSubscriptPlugin(),\n        createSuperscriptPlugin(),\n        // 键盘监听\n        createKbdPlugin(),\n        createNodeIdPlugin(),\n        // markdown语法支持\n        // createAutoformatPlugin(optionsAutoformat),\n        // 设置默认模块\n        createResetNodePlugin(optionsResetBlockTypePlugin),\n        // 软换行\n        createSoftBreakPlugin(optionsSoftBreakPlugin),\n        // 退出当前块\n        createExitBreakPlugin(optionsExitBreakPlugin),\n        // 强制布局\n        // createNormalizeTypesPlugin({\n        //   rules: [{ path: [0, 0], strictType: ELEMENT_H1 }],\n        // }),\n        // createTrailingBlockPlugin({\n        //   type: ELEMENT_PARAGRAPH,\n        //   level: 1,\n        // }),\n        createSelectOnBackspacePlugin({ allow: ELEMENT_IMAGE })\n      ]\n      // 处理html文本插入\n      plugins.push(createDeserializeHTMLPlugin({ plugins }))\n\n      return plugins\n    }, [])\n    const pageContext = useContext(PageContext)\n    const editor = useStoreEditorRef()\n    let [value, setValue] = useState<any>(initialValuePasteHtml)\n    const editableProps = {\n      // placeholder: 'Type…',\n      style: {\n        width: '794px',\n        minHeight: '500px',\n        outline: '1px solid rgb(238, 238, 238)'\n      }\n    }\n    return (\n      <ConfigContext.Provider value={config}>\n        <Plate\n          id={id}\n          plugins={pluginsMemo}\n          onChange={(val) => {\n            console.log(val)\n            editor && slateEditor.normalize(editor)\n            console.log('normalize 开始拉')\n            pageContext.setData(val)\n            // setValue(val)\n            // pubInstance.publish('update', val)\n          }}\n          components={styledComponents}\n          options={defaultOptions}\n          editableProps={editableProps}\n          initialValue={value}\n        >\n          <HeadingToolbar styles={{ root: { margin: '0px -20px 0' } }}>\n            <ToolbarButtonsBasicElements />\n            <ToolbarButtonsList />\n            <ToolbarButtonsBasicMarks />\n            <ToolbarButtonsAlign />\n            <ToolbarButtonsTable />\n          </HeadingToolbar>\n          <BallonToolbarMarks></BallonToolbarMarks>\n          <Paging></Paging>\n        </Plate>\n      </ConfigContext.Provider>\n    )\n  }\n\n  return (\n    <div\n      ref={componentRef}\n      className={\n        modelenv === 'read'\n          ? 'readmodel-editor slate-editor-core'\n          : 'slate-editor-core'\n      }\n    >\n      <PageProvider>\n        <Editor />\n      </PageProvider>\n    </div>\n  )\n}\n\nexport default RichText\n","import { getRenderElement, PlatePlugin } from '@udecode/plate-core'\nimport { ELEMENT_PAGE } from './defaults'\nimport { withPage } from './withPage'\n\n/**\n * Enables support for hyperlinks.\n */\nexport const createPagePlugin = (): PlatePlugin => ({\n  pluginKeys: ELEMENT_PAGE,\n  renderElement: getRenderElement(ELEMENT_PAGE),\n  withOverrides: withPage()\n})\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App config={{ model: 'desc', id: 'udos' }} />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}